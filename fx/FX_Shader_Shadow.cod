//
// FX Version: fx_5_0
//
// 2 local buffer(s)
//
cbuffer ConstantBuffer : register(b0)
{
    float4x4 World;                     // Offset:    0, size:   64
    float4x4 WorldViewProjection;       // Offset:   64, size:   64
    float4x4 WorldInvTranspose;         // Offset:  128, size:   64
    float4x4 TexTransform;              // Offset:  192, size:   64
    float4x4 ViewProj;                  // Offset:  256, size:   64
}

cbuffer cbPerFrame : register(b1)
{
    float3  gEyePosW;                   // Offset:    0, size:   12
}

//
// 3 local object(s)
//
SamplerState samLinear
{
    Filter   = uint(MIN_MAG_MIP_LINEAR /* 21 */);
    AddressU = uint(WRAP /* 1 */);
    AddressV = uint(WRAP /* 1 */);
};
Texture2D gAlphaMap;
RasterizerState Depth
{
    DepthBias = uint(0x0000c350);
    DepthBiasClamp = float(0.5);
    SlopeScaledDepthBias = float(0.400000006);
};

//
// 1 groups(s)
//
fxgroup
{
    //
    // 2 technique(s)
    //
    technique11 BuildShadowMapTechNoAlpha
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer ConstantBuffer
                // {
                //
                //   float4x4 World;                    // Offset:    0 Size:    64 [unused]
                //   float4x4 WorldViewProjection;      // Offset:   64 Size:    64
                //   float4x4 WorldInvTranspose;        // Offset:  128 Size:    64 [unused]
                //   float4x4 TexTransform;             // Offset:  192 Size:    64
                //   float4x4 ViewProj;                 // Offset:  256 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // ConstantBuffer                    cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // POSITION                 0   xyz         0     NONE   float   xyz 
                // NORMAL                   0   xyz         1     NONE   float       
                // TEXCOORD                 0   xy          2     NONE   float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_POSITION              0   xyzw        0      POS   float   xyzw
                // TEXCOORD                 0   xy          1     NONE   float   xy  
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed | skipOptimization
                dcl_constantbuffer cb0[14], immediateIndexed
                dcl_input v0.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xy
                dcl_temps 3
                //
                // Initial variable locations:
                //   v0.x <- input.PositionL.x; v0.y <- input.PositionL.y; v0.z <- input.PositionL.z; 
                //   v1.x <- input.NormalL.x; v1.y <- input.NormalL.y; v1.z <- input.NormalL.z; 
                //   v2.x <- input.Tex.x; v2.y <- input.Tex.y; 
                //   o1.x <- <VS return value>.Tex.x; o1.y <- <VS return value>.Tex.y; 
                //   o0.x <- <VS return value>.PositionH.x; o0.y <- <VS return value>.PositionH.y; o0.z <- <VS return value>.PositionH.z; o0.w <- <VS return value>.PositionH.w
                //
                #line 61 "C:\Users\Kamil\Documents\Visual Studio 2015\Projects\KalenEngineDX11\KalenEngineDX11\fx\FX_Shader_Shadow.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[4].xyzw  // r1.x <- output.PositionH.x
                dp4 r1.y, r0.xyzw, cb0[5].xyzw  // r1.y <- output.PositionH.y
                dp4 r1.z, r0.xyzw, cb0[6].xyzw  // r1.z <- output.PositionH.z
                dp4 r1.w, r0.xyzw, cb0[7].xyzw  // r1.w <- output.PositionH.w
                mov r0.xy, v2.xyxx
                mov r0.zw, l(0,0,0,1.000000)
                dp4 r2.x, r0.xyzw, cb0[12].xyzw  // r2.x <- output.Tex.x
                dp4 r2.y, r0.xyzw, cb0[13].xyzw  // r2.y <- output.Tex.y
                mov o0.xyzw, r1.xyzw
                mov o1.xy, r2.xyxx
                ret 
                // Approximately 13 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = NULL;
            RasterizerState = Depth;
        }

    }

    technique11 BuildShadowMapTechAlpha
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer ConstantBuffer
                // {
                //
                //   float4x4 World;                    // Offset:    0 Size:    64 [unused]
                //   float4x4 WorldViewProjection;      // Offset:   64 Size:    64
                //   float4x4 WorldInvTranspose;        // Offset:  128 Size:    64 [unused]
                //   float4x4 TexTransform;             // Offset:  192 Size:    64
                //   float4x4 ViewProj;                 // Offset:  256 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // ConstantBuffer                    cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // POSITION                 0   xyz         0     NONE   float   xyz 
                // NORMAL                   0   xyz         1     NONE   float       
                // TEXCOORD                 0   xy          2     NONE   float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_POSITION              0   xyzw        0      POS   float   xyzw
                // TEXCOORD                 0   xy          1     NONE   float   xy  
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed | skipOptimization
                dcl_constantbuffer cb0[14], immediateIndexed
                dcl_input v0.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xy
                dcl_temps 3
                //
                // Initial variable locations:
                //   v0.x <- input.PositionL.x; v0.y <- input.PositionL.y; v0.z <- input.PositionL.z; 
                //   v1.x <- input.NormalL.x; v1.y <- input.NormalL.y; v1.z <- input.NormalL.z; 
                //   v2.x <- input.Tex.x; v2.y <- input.Tex.y; 
                //   o1.x <- <VS return value>.Tex.x; o1.y <- <VS return value>.Tex.y; 
                //   o0.x <- <VS return value>.PositionH.x; o0.y <- <VS return value>.PositionH.y; o0.z <- <VS return value>.PositionH.z; o0.w <- <VS return value>.PositionH.w
                //
                #line 61 "C:\Users\Kamil\Documents\Visual Studio 2015\Projects\KalenEngineDX11\KalenEngineDX11\fx\FX_Shader_Shadow.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[4].xyzw  // r1.x <- output.PositionH.x
                dp4 r1.y, r0.xyzw, cb0[5].xyzw  // r1.y <- output.PositionH.y
                dp4 r1.z, r0.xyzw, cb0[6].xyzw  // r1.z <- output.PositionH.z
                dp4 r1.w, r0.xyzw, cb0[7].xyzw  // r1.w <- output.PositionH.w
                mov r0.xy, v2.xyxx
                mov r0.zw, l(0,0,0,1.000000)
                dp4 r2.x, r0.xyzw, cb0[12].xyzw  // r2.x <- output.Tex.x
                dp4 r2.y, r0.xyzw, cb0[13].xyzw  // r2.y <- output.Tex.y
                mov o0.xyzw, r1.xyzw
                mov o1.xy, r2.xyxx
                ret 
                // Approximately 13 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // gAlphaMap                         texture  float4          2d    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_POSITION              0   xyzw        0      POS   float       
                // TEXCOORD                 0   xy          1     NONE   float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // no Output
                ps_5_0
                dcl_globalFlags refactoringAllowed | skipOptimization
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_input_ps linear v1.xy
                dcl_temps 2
                //
                // Initial variable locations:
                //   v0.x <- input.PositionH.x; v0.y <- input.PositionH.y; v0.z <- input.PositionH.z; v0.w <- input.PositionH.w; 
                //   v1.x <- input.Tex.x; v1.y <- input.Tex.y
                //
                #line 76 "C:\Users\Kamil\Documents\Visual Studio 2015\Projects\KalenEngineDX11\KalenEngineDX11\fx\FX_Shader_Shadow.fx"
                sample_indexable(texture2d)(float,float,float,float) r0.xyz, v1.xyxx, t0.xyzw, s0
                mov r0.xyz, r0.xyzx  // r0.x <- diffuse.x; r0.y <- diffuse.y; r0.z <- diffuse.z
                mov r1.xyz, l(-0.100000,-0.100000,-0.100000,-0.000000)
                add r0.xyz, r0.xyzx, r1.xyzx
                lt r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
                or r0.x, r0.y, r0.x
                or r0.x, r0.z, r0.x
                and r0.x, r0.x, l(-1)
                discard_nz r0.x
                ret 
                // Approximately 10 instruction slots used
                            
            };
        }

    }

}

